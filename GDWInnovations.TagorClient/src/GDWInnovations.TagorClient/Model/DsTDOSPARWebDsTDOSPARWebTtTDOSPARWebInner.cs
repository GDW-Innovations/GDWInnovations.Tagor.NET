/*
 * Tagor API
 *
 * Release date: 29/09/2022  ## REQUIREMENTS This version __requires__ Tagor >= 2.00.0000B0. Use [`Config/Info`](#operation/ConfigInfo) to get the active API version.  ## CHANGELOG - New [`Dossier/CreateAgenda`](#operation/DossierCreateAgenda) endpoint. - New return values in GetAgenda 'TJOB_Id, TJOBM_Id, TUSER_Id, Manueel and IsGeblokkeerd' - In CreateLine you can now add if the line is fixed with 'IsFixed' - In CreateLine you can now add a subarray with the intrests  ## INFO - Using the download button at the top you can import this collection of endpoints in **Postman** - In general all TQ(...)_Id fields are default fields which you can translate with the [`Code/GetDescription`](#operation/CodeGetDescription) endpoint. If you need an id to post to one of the endpoints you can use the [`Code/GetList`](#operation/CodeGetList) endpoint to get all possible values or [`Code/GetDescription`](#operation/CodeGetDescription) to get a value by code. These id's will be marked as `code id` in the documentation. - We chose to return all ids as string because these are 64bit integers which are too big for javascript to handle. - All italic text below the endpoint description is meant for people with access to Tagor. - The user needs an email address configured in Tagor for the services to work properly. - Pass the `Accept` header with `application/json` as value to have the server return errors in json format. - Most endpoints can be batched/paged by passing a `BATCH-SIZE` and `BATCH-NUMBER` record in `dsWebContext`.  # AUTHENTICATION Pass your token via an `Authorization` header like this: `Authorization: {bearer_format} {token}`.  ex: `Authorization: TGR IcoQbVw7wE...PPUPda61ET` <!- - ReDoc-Inject: <security-definitions> - ->
 *
 * The version of the OpenAPI document: 2.00.0000B1
 * Contact: info@organi.be
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = GDWInnovations.TagorClient.Client.OpenAPIDateConverter;

namespace GDWInnovations.TagorClient.Model
{
    /// <summary>
    /// DsTDOSPARWebDsTDOSPARWebTtTDOSPARWebInner
    /// </summary>
    [DataContract(Name = "dsTDOSPARWeb_dsTDOSPARWeb_ttTDOSPARWeb_inner")]
    public partial class DsTDOSPARWebDsTDOSPARWebTtTDOSPARWebInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DsTDOSPARWebDsTDOSPARWebTtTDOSPARWebInner" /> class.
        /// </summary>
        /// <param name="tPARId">tPARId.</param>
        /// <param name="beroep">beroep.</param>
        /// <param name="gSM">gSM.</param>
        /// <param name="naam">naam.</param>
        /// <param name="plaats">plaats.</param>
        /// <param name="postcode">postcode.</param>
        /// <param name="referentie">referentie.</param>
        /// <param name="rekNr">rekNr.</param>
        /// <param name="straat">straat.</param>
        /// <param name="straatBusNr">straatBusNr.</param>
        /// <param name="straatNr">straatNr.</param>
        /// <param name="tel">tel.</param>
        /// <param name="tQPARSOORTId">tQPARSOORTId.</param>
        /// <param name="tQSOLVABILITEITIdAdres">tQSOLVABILITEITIdAdres.</param>
        /// <param name="tQSOLVABILITEITIdFinancieel">tQSOLVABILITEITIdFinancieel.</param>
        /// <param name="solvDtmAdres">solvDtmAdres.</param>
        /// <param name="solvDtmFinan">solvDtmFinan.</param>
        /// <param name="kBOnr">kBOnr.</param>
        /// <param name="nationaalNr">nationaalNr.</param>
        /// <param name="partijVorm">partijVorm.</param>
        /// <param name="mail">mail.</param>
        public DsTDOSPARWebDsTDOSPARWebTtTDOSPARWebInner(string tPARId = default(string), string beroep = default(string), string gSM = default(string), string naam = default(string), string plaats = default(string), string postcode = default(string), string referentie = default(string), string rekNr = default(string), string straat = default(string), string straatBusNr = default(string), string straatNr = default(string), string tel = default(string), string tQPARSOORTId = default(string), string tQSOLVABILITEITIdAdres = default(string), string tQSOLVABILITEITIdFinancieel = default(string), string solvDtmAdres = default(string), string solvDtmFinan = default(string), string kBOnr = default(string), string nationaalNr = default(string), string partijVorm = default(string), string mail = default(string))
        {
            this.TPARId = tPARId;
            this.Beroep = beroep;
            this.GSM = gSM;
            this.Naam = naam;
            this.Plaats = plaats;
            this.Postcode = postcode;
            this.Referentie = referentie;
            this.RekNr = rekNr;
            this.Straat = straat;
            this.StraatBusNr = straatBusNr;
            this.StraatNr = straatNr;
            this.Tel = tel;
            this.TQPARSOORTId = tQPARSOORTId;
            this.TQSOLVABILITEITIdAdres = tQSOLVABILITEITIdAdres;
            this.TQSOLVABILITEITIdFinancieel = tQSOLVABILITEITIdFinancieel;
            this.SolvDtmAdres = solvDtmAdres;
            this.SolvDtmFinan = solvDtmFinan;
            this.KBOnr = kBOnr;
            this.NationaalNr = nationaalNr;
            this.PartijVorm = partijVorm;
            this.Mail = mail;
        }

        /// <summary>
        /// Gets or Sets TPARId
        /// </summary>
        [DataMember(Name = "TPAR_Id", EmitDefaultValue = false)]
        public string TPARId { get; set; }

        /// <summary>
        /// Gets or Sets Beroep
        /// </summary>
        [DataMember(Name = "Beroep", EmitDefaultValue = false)]
        public string Beroep { get; set; }

        /// <summary>
        /// Gets or Sets GSM
        /// </summary>
        [DataMember(Name = "GSM", EmitDefaultValue = false)]
        public string GSM { get; set; }

        /// <summary>
        /// Gets or Sets Naam
        /// </summary>
        [DataMember(Name = "Naam", EmitDefaultValue = false)]
        public string Naam { get; set; }

        /// <summary>
        /// Gets or Sets Plaats
        /// </summary>
        [DataMember(Name = "Plaats", EmitDefaultValue = false)]
        public string Plaats { get; set; }

        /// <summary>
        /// Gets or Sets Postcode
        /// </summary>
        [DataMember(Name = "Postcode", EmitDefaultValue = false)]
        public string Postcode { get; set; }

        /// <summary>
        /// Gets or Sets Referentie
        /// </summary>
        [DataMember(Name = "Referentie", EmitDefaultValue = false)]
        public string Referentie { get; set; }

        /// <summary>
        /// Gets or Sets RekNr
        /// </summary>
        [DataMember(Name = "RekNr", EmitDefaultValue = false)]
        public string RekNr { get; set; }

        /// <summary>
        /// Gets or Sets Straat
        /// </summary>
        [DataMember(Name = "Straat", EmitDefaultValue = false)]
        public string Straat { get; set; }

        /// <summary>
        /// Gets or Sets StraatBusNr
        /// </summary>
        [DataMember(Name = "StraatBusNr", EmitDefaultValue = false)]
        public string StraatBusNr { get; set; }

        /// <summary>
        /// Gets or Sets StraatNr
        /// </summary>
        [DataMember(Name = "StraatNr", EmitDefaultValue = false)]
        public string StraatNr { get; set; }

        /// <summary>
        /// Gets or Sets Tel
        /// </summary>
        [DataMember(Name = "Tel", EmitDefaultValue = false)]
        public string Tel { get; set; }

        /// <summary>
        /// Gets or Sets TQPARSOORTId
        /// </summary>
        [DataMember(Name = "TQPARSOORT_Id", EmitDefaultValue = false)]
        public string TQPARSOORTId { get; set; }

        /// <summary>
        /// Gets or Sets TQSOLVABILITEITIdAdres
        /// </summary>
        [DataMember(Name = "TQSOLVABILITEIT_Id_Adres", EmitDefaultValue = false)]
        public string TQSOLVABILITEITIdAdres { get; set; }

        /// <summary>
        /// Gets or Sets TQSOLVABILITEITIdFinancieel
        /// </summary>
        [DataMember(Name = "TQSOLVABILITEIT_Id_Financieel", EmitDefaultValue = false)]
        public string TQSOLVABILITEITIdFinancieel { get; set; }

        /// <summary>
        /// Gets or Sets SolvDtmAdres
        /// </summary>
        [DataMember(Name = "SolvDtm_adres", EmitDefaultValue = true)]
        public string SolvDtmAdres { get; set; }

        /// <summary>
        /// Gets or Sets SolvDtmFinan
        /// </summary>
        [DataMember(Name = "SolvDtm_finan", EmitDefaultValue = true)]
        public string SolvDtmFinan { get; set; }

        /// <summary>
        /// Gets or Sets KBOnr
        /// </summary>
        [DataMember(Name = "KBOnr", EmitDefaultValue = false)]
        public string KBOnr { get; set; }

        /// <summary>
        /// Gets or Sets NationaalNr
        /// </summary>
        [DataMember(Name = "NationaalNr", EmitDefaultValue = false)]
        public string NationaalNr { get; set; }

        /// <summary>
        /// Gets or Sets PartijVorm
        /// </summary>
        [DataMember(Name = "PartijVorm", EmitDefaultValue = false)]
        public string PartijVorm { get; set; }

        /// <summary>
        /// Gets or Sets Mail
        /// </summary>
        [DataMember(Name = "Mail", EmitDefaultValue = false)]
        public string Mail { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DsTDOSPARWebDsTDOSPARWebTtTDOSPARWebInner {\n");
            sb.Append("  TPARId: ").Append(TPARId).Append("\n");
            sb.Append("  Beroep: ").Append(Beroep).Append("\n");
            sb.Append("  GSM: ").Append(GSM).Append("\n");
            sb.Append("  Naam: ").Append(Naam).Append("\n");
            sb.Append("  Plaats: ").Append(Plaats).Append("\n");
            sb.Append("  Postcode: ").Append(Postcode).Append("\n");
            sb.Append("  Referentie: ").Append(Referentie).Append("\n");
            sb.Append("  RekNr: ").Append(RekNr).Append("\n");
            sb.Append("  Straat: ").Append(Straat).Append("\n");
            sb.Append("  StraatBusNr: ").Append(StraatBusNr).Append("\n");
            sb.Append("  StraatNr: ").Append(StraatNr).Append("\n");
            sb.Append("  Tel: ").Append(Tel).Append("\n");
            sb.Append("  TQPARSOORTId: ").Append(TQPARSOORTId).Append("\n");
            sb.Append("  TQSOLVABILITEITIdAdres: ").Append(TQSOLVABILITEITIdAdres).Append("\n");
            sb.Append("  TQSOLVABILITEITIdFinancieel: ").Append(TQSOLVABILITEITIdFinancieel).Append("\n");
            sb.Append("  SolvDtmAdres: ").Append(SolvDtmAdres).Append("\n");
            sb.Append("  SolvDtmFinan: ").Append(SolvDtmFinan).Append("\n");
            sb.Append("  KBOnr: ").Append(KBOnr).Append("\n");
            sb.Append("  NationaalNr: ").Append(NationaalNr).Append("\n");
            sb.Append("  PartijVorm: ").Append(PartijVorm).Append("\n");
            sb.Append("  Mail: ").Append(Mail).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
