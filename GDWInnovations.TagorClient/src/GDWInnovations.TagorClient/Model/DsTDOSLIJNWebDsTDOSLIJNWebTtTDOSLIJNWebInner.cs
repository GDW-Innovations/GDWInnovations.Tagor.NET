/*
 * Tagor API
 *
 * Release date: 29/09/2022  ## REQUIREMENTS This version __requires__ Tagor >= 2.00.0000B0. Use [`Config/Info`](#operation/ConfigInfo) to get the active API version.  ## CHANGELOG - New [`Dossier/CreateAgenda`](#operation/DossierCreateAgenda) endpoint. - New return values in GetAgenda 'TJOB_Id, TJOBM_Id, TUSER_Id, Manueel and IsGeblokkeerd' - In CreateLine you can now add if the line is fixed with 'IsFixed' - In CreateLine you can now add a subarray with the intrests  ## INFO - Using the download button at the top you can import this collection of endpoints in **Postman** - In general all TQ(...)_Id fields are default fields which you can translate with the [`Code/GetDescription`](#operation/CodeGetDescription) endpoint. If you need an id to post to one of the endpoints you can use the [`Code/GetList`](#operation/CodeGetList) endpoint to get all possible values or [`Code/GetDescription`](#operation/CodeGetDescription) to get a value by code. These id's will be marked as `code id` in the documentation. - We chose to return all ids as string because these are 64bit integers which are too big for javascript to handle. - All italic text below the endpoint description is meant for people with access to Tagor. - The user needs an email address configured in Tagor for the services to work properly. - Pass the `Accept` header with `application/json` as value to have the server return errors in json format. - Most endpoints can be batched/paged by passing a `BATCH-SIZE` and `BATCH-NUMBER` record in `dsWebContext`.  # AUTHENTICATION Pass your token via an `Authorization` header like this: `Authorization: {bearer_format} {token}`.  ex: `Authorization: TGR IcoQbVw7wE...PPUPda61ET` <!- - ReDoc-Inject: <security-definitions> - ->
 *
 * The version of the OpenAPI document: 2.00.0000B1
 * Contact: info@organi.be
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = GDWInnovations.TagorClient.Client.OpenAPIDateConverter;

namespace GDWInnovations.TagorClient.Model
{
    /// <summary>
    /// DsTDOSLIJNWebDsTDOSLIJNWebTtTDOSLIJNWebInner
    /// </summary>
    [DataContract(Name = "dsTDOSLIJNWeb_dsTDOSLIJNWeb_ttTDOSLIJNWeb_inner")]
    public partial class DsTDOSLIJNWebDsTDOSLIJNWebTtTDOSLIJNWebInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DsTDOSLIJNWebDsTDOSLIJNWebTtTDOSLIJNWebInner" /> class.
        /// </summary>
        /// <param name="tDOSLIJNId">tDOSLIJNId.</param>
        /// <param name="bedrag">bedrag.</param>
        /// <param name="bedragBbConfrater">bedragBbConfrater.</param>
        /// <param name="bedragBTW">bedragBTW.</param>
        /// <param name="confrator">confrator.</param>
        /// <param name="datumBoeking">datumBoeking.</param>
        /// <param name="dossiernaam">dossiernaam.</param>
        /// <param name="omschrijving">omschrijving.</param>
        /// <param name="opmerking">opmerking.</param>
        /// <param name="recht">recht.</param>
        /// <param name="state">state.</param>
        /// <param name="tDOSId">tDOSId.</param>
        /// <param name="tQAARDId">tQAARDId.</param>
        /// <param name="tQBOEKINGId">tQBOEKINGId.</param>
        /// <param name="kost">kost.</param>
        /// <param name="betalingKlant">betalingKlant.</param>
        /// <param name="betalingStudie">betalingStudie.</param>
        /// <param name="doorstorting">doorstorting.</param>
        /// <param name="dossierKlantReferte">dossierKlantReferte.</param>
        /// <param name="gefixeerd">gefixeerd.</param>
        /// <param name="referte">referte.</param>
        /// <param name="isFixed">isFixed.</param>
        /// <param name="ttTDOSLIJNINTR">ttTDOSLIJNINTR.</param>
        public DsTDOSLIJNWebDsTDOSLIJNWebTtTDOSLIJNWebInner(string tDOSLIJNId = default(string), decimal bedrag = default(decimal), decimal bedragBbConfrater = default(decimal), decimal bedragBTW = default(decimal), bool confrator = default(bool), DateOnly datumBoeking = default(DateOnly), string dossiernaam = default(string), string omschrijving = default(string), string opmerking = default(string), decimal recht = default(decimal), string state = default(string), string tDOSId = default(string), string tQAARDId = default(string), string tQBOEKINGId = default(string), decimal kost = default(decimal), decimal betalingKlant = default(decimal), decimal betalingStudie = default(decimal), decimal doorstorting = default(decimal), string dossierKlantReferte = default(string), bool gefixeerd = default(bool), string referte = default(string), string isFixed = default(string), List<DsTDOSLIJNWebDsTDOSLIJNWebTtTDOSLIJNWebInnerTtTDOSLIJNINTRInner> ttTDOSLIJNINTR = default(List<DsTDOSLIJNWebDsTDOSLIJNWebTtTDOSLIJNWebInnerTtTDOSLIJNINTRInner>))
        {
            this.TDOSLIJNId = tDOSLIJNId;
            this.Bedrag = bedrag;
            this.BedragBbConfrater = bedragBbConfrater;
            this.BedragBTW = bedragBTW;
            this.Confrator = confrator;
            this.DatumBoeking = datumBoeking;
            this.Dossiernaam = dossiernaam;
            this.Omschrijving = omschrijving;
            this.Opmerking = opmerking;
            this.Recht = recht;
            this.State = state;
            this.TDOSId = tDOSId;
            this.TQAARDId = tQAARDId;
            this.TQBOEKINGId = tQBOEKINGId;
            this.Kost = kost;
            this.BetalingKlant = betalingKlant;
            this.BetalingStudie = betalingStudie;
            this.Doorstorting = doorstorting;
            this.DossierKlantReferte = dossierKlantReferte;
            this.Gefixeerd = gefixeerd;
            this.Referte = referte;
            this.IsFixed = isFixed;
            this.TtTDOSLIJNINTR = ttTDOSLIJNINTR;
        }

        /// <summary>
        /// Gets or Sets TDOSLIJNId
        /// </summary>
        [DataMember(Name = "TDOSLIJN_Id", EmitDefaultValue = false)]
        public string TDOSLIJNId { get; set; }

        /// <summary>
        /// Gets or Sets Bedrag
        /// </summary>
        [DataMember(Name = "Bedrag", EmitDefaultValue = false)]
        public decimal Bedrag { get; set; }

        /// <summary>
        /// Gets or Sets BedragBbConfrater
        /// </summary>
        [DataMember(Name = "BedragBbConfrater", EmitDefaultValue = false)]
        public decimal BedragBbConfrater { get; set; }

        /// <summary>
        /// Gets or Sets BedragBTW
        /// </summary>
        [DataMember(Name = "BedragBTW", EmitDefaultValue = false)]
        public decimal BedragBTW { get; set; }

        /// <summary>
        /// Gets or Sets Confrator
        /// </summary>
        [DataMember(Name = "Confrator", EmitDefaultValue = true)]
        public bool Confrator { get; set; }

        /// <summary>
        /// Gets or Sets DatumBoeking
        /// </summary>
        [DataMember(Name = "DatumBoeking", EmitDefaultValue = false)]
        public DateOnly DatumBoeking { get; set; }

        /// <summary>
        /// Gets or Sets Dossiernaam
        /// </summary>
        [DataMember(Name = "Dossiernaam", EmitDefaultValue = false)]
        public string Dossiernaam { get; set; }

        /// <summary>
        /// Gets or Sets Omschrijving
        /// </summary>
        [DataMember(Name = "Omschrijving", EmitDefaultValue = false)]
        public string Omschrijving { get; set; }

        /// <summary>
        /// Gets or Sets Opmerking
        /// </summary>
        [DataMember(Name = "Opmerking", EmitDefaultValue = false)]
        public string Opmerking { get; set; }

        /// <summary>
        /// Gets or Sets Recht
        /// </summary>
        [DataMember(Name = "Recht", EmitDefaultValue = false)]
        public decimal Recht { get; set; }

        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name = "State", EmitDefaultValue = false)]
        public string State { get; set; }

        /// <summary>
        /// Gets or Sets TDOSId
        /// </summary>
        [DataMember(Name = "TDOS_Id", EmitDefaultValue = false)]
        public string TDOSId { get; set; }

        /// <summary>
        /// Gets or Sets TQAARDId
        /// </summary>
        [DataMember(Name = "TQAARD_Id", EmitDefaultValue = false)]
        public string TQAARDId { get; set; }

        /// <summary>
        /// Gets or Sets TQBOEKINGId
        /// </summary>
        [DataMember(Name = "TQBOEKING_Id", EmitDefaultValue = false)]
        public string TQBOEKINGId { get; set; }

        /// <summary>
        /// Gets or Sets Kost
        /// </summary>
        [DataMember(Name = "Kost", EmitDefaultValue = false)]
        public decimal Kost { get; set; }

        /// <summary>
        /// Gets or Sets BetalingKlant
        /// </summary>
        [DataMember(Name = "BetalingKlant", EmitDefaultValue = false)]
        public decimal BetalingKlant { get; set; }

        /// <summary>
        /// Gets or Sets BetalingStudie
        /// </summary>
        [DataMember(Name = "BetalingStudie", EmitDefaultValue = false)]
        public decimal BetalingStudie { get; set; }

        /// <summary>
        /// Gets or Sets Doorstorting
        /// </summary>
        [DataMember(Name = "Doorstorting", EmitDefaultValue = false)]
        public decimal Doorstorting { get; set; }

        /// <summary>
        /// Gets or Sets DossierKlantReferte
        /// </summary>
        [DataMember(Name = "DossierKlantReferte", EmitDefaultValue = false)]
        public string DossierKlantReferte { get; set; }

        /// <summary>
        /// Gets or Sets Gefixeerd
        /// </summary>
        [DataMember(Name = "Gefixeerd", EmitDefaultValue = true)]
        public bool Gefixeerd { get; set; }

        /// <summary>
        /// Gets or Sets Referte
        /// </summary>
        [DataMember(Name = "Referte", EmitDefaultValue = false)]
        public string Referte { get; set; }

        /// <summary>
        /// Gets or Sets IsFixed
        /// </summary>
        [DataMember(Name = "IsFixed", EmitDefaultValue = false)]
        public string IsFixed { get; set; }

        /// <summary>
        /// Gets or Sets TtTDOSLIJNINTR
        /// </summary>
        [DataMember(Name = "ttTDOSLIJNINTR", EmitDefaultValue = false)]
        public List<DsTDOSLIJNWebDsTDOSLIJNWebTtTDOSLIJNWebInnerTtTDOSLIJNINTRInner> TtTDOSLIJNINTR { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DsTDOSLIJNWebDsTDOSLIJNWebTtTDOSLIJNWebInner {\n");
            sb.Append("  TDOSLIJNId: ").Append(TDOSLIJNId).Append("\n");
            sb.Append("  Bedrag: ").Append(Bedrag).Append("\n");
            sb.Append("  BedragBbConfrater: ").Append(BedragBbConfrater).Append("\n");
            sb.Append("  BedragBTW: ").Append(BedragBTW).Append("\n");
            sb.Append("  Confrator: ").Append(Confrator).Append("\n");
            sb.Append("  DatumBoeking: ").Append(DatumBoeking).Append("\n");
            sb.Append("  Dossiernaam: ").Append(Dossiernaam).Append("\n");
            sb.Append("  Omschrijving: ").Append(Omschrijving).Append("\n");
            sb.Append("  Opmerking: ").Append(Opmerking).Append("\n");
            sb.Append("  Recht: ").Append(Recht).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  TDOSId: ").Append(TDOSId).Append("\n");
            sb.Append("  TQAARDId: ").Append(TQAARDId).Append("\n");
            sb.Append("  TQBOEKINGId: ").Append(TQBOEKINGId).Append("\n");
            sb.Append("  Kost: ").Append(Kost).Append("\n");
            sb.Append("  BetalingKlant: ").Append(BetalingKlant).Append("\n");
            sb.Append("  BetalingStudie: ").Append(BetalingStudie).Append("\n");
            sb.Append("  Doorstorting: ").Append(Doorstorting).Append("\n");
            sb.Append("  DossierKlantReferte: ").Append(DossierKlantReferte).Append("\n");
            sb.Append("  Gefixeerd: ").Append(Gefixeerd).Append("\n");
            sb.Append("  Referte: ").Append(Referte).Append("\n");
            sb.Append("  IsFixed: ").Append(IsFixed).Append("\n");
            sb.Append("  TtTDOSLIJNINTR: ").Append(TtTDOSLIJNINTR).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
