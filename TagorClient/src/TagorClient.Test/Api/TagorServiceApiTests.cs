/*
 * Tagor API
 *
 * Release date: 29/09/2022  ## REQUIREMENTS This version __requires__ Tagor >= 2.00.0000B0. Use [`Config/Info`](#operation/ConfigInfo) to get the active API version.  ## CHANGELOG - New [`Dossier/CreateAgenda`](#operation/DossierCreateAgenda) endpoint. - New return values in GetAgenda 'TJOB_Id, TJOBM_Id, TUSER_Id, Manueel and IsGeblokkeerd' - In CreateLine you can now add if the line is fixed with 'IsFixed' - In CreateLine you can now add a subarray with the intrests  ## INFO - Using the download button at the top you can import this collection of endpoints in **Postman** - In general all TQ(...)_Id fields are default fields which you can translate with the [`Code/GetDescription`](#operation/CodeGetDescription) endpoint. If you need an id to post to one of the endpoints you can use the [`Code/GetList`](#operation/CodeGetList) endpoint to get all possible values or [`Code/GetDescription`](#operation/CodeGetDescription) to get a value by code. These id's will be marked as `code id` in the documentation. - We chose to return all ids as string because these are 64bit integers which are too big for javascript to handle. - All italic text below the endpoint description is meant for people with access to Tagor. - The user needs an email address configured in Tagor for the services to work properly. - Pass the `Accept` header with `application/json` as value to have the server return errors in json format. - Most endpoints can be batched/paged by passing a `BATCH-SIZE` and `BATCH-NUMBER` record in `dsWebContext`.  # AUTHENTICATION Pass your token via an `Authorization` header like this: `Authorization: {bearer_format} {token}`.  ex: `Authorization: TGR IcoQbVw7wE...PPUPda61ET` <!- - ReDoc-Inject: <security-definitions> - ->
 *
 * The version of the OpenAPI document: 2.00.0000B1
 * Contact: info@organi.be
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using TagorClient.Client;
using TagorClient.Api;
// uncomment below to import models
//using TagorClient.Model;

namespace TagorClient.Test.Api
{
    /// <summary>
    ///  Class for testing TagorServiceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TagorServiceApiTests : IDisposable
    {
        private TagorServiceApi instance;

        public TagorServiceApiTests()
        {
            instance = new TagorServiceApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TagorServiceApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TagorServiceApi
            //Assert.IsType<TagorServiceApi>(instance);
        }

        /// <summary>
        /// Test TagorServiceApprovePaymentPlan
        /// </summary>
        [Fact]
        public void TagorServiceApprovePaymentPlanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServiceApprovePaymentPlanRequest? tagorServiceApprovePaymentPlanRequest = null;
            //var response = instance.TagorServiceApprovePaymentPlan(tagorServiceApprovePaymentPlanRequest);
            //Assert.IsType<TagorServiceApprovePaymentPlan200Response>(response);
        }

        /// <summary>
        /// Test TagorServiceClipToFile
        /// </summary>
        [Fact]
        public void TagorServiceClipToFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServiceClipToFileRequest? tagorServiceClipToFileRequest = null;
            //var response = instance.TagorServiceClipToFile(tagorServiceClipToFileRequest);
            //Assert.IsType<TagorServiceClipToFile200Response>(response);
        }

        /// <summary>
        /// Test TagorServiceFileToHash
        /// </summary>
        [Fact]
        public void TagorServiceFileToHashTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServiceFileToHashRequest? tagorServiceFileToHashRequest = null;
            //var response = instance.TagorServiceFileToHash(tagorServiceFileToHashRequest);
            //Assert.IsType<ActionsSendMail200Response>(response);
        }

        /// <summary>
        /// Test TagorServiceGetDosInfo
        /// </summary>
        [Fact]
        public void TagorServiceGetDosInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServiceGetDosInfoRequest? tagorServiceGetDosInfoRequest = null;
            //var response = instance.TagorServiceGetDosInfo(tagorServiceGetDosInfoRequest);
            //Assert.IsType<TagorServiceGetDosInfo200Response>(response);
        }

        /// <summary>
        /// Test TagorServiceGetPaymentPlanCriteria
        /// </summary>
        [Fact]
        public void TagorServiceGetPaymentPlanCriteriaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServiceGetPaymentPlanCriteriaRequest? tagorServiceGetPaymentPlanCriteriaRequest = null;
            //var response = instance.TagorServiceGetPaymentPlanCriteria(tagorServiceGetPaymentPlanCriteriaRequest);
            //Assert.IsType<TagorServiceGetPaymentPlanCriteria200Response>(response);
        }

        /// <summary>
        /// Test TagorServiceGetSaldo
        /// </summary>
        [Fact]
        public void TagorServiceGetSaldoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServiceGetSaldoRequest? tagorServiceGetSaldoRequest = null;
            //var response = instance.TagorServiceGetSaldo(tagorServiceGetSaldoRequest);
            //Assert.IsType<TagorServiceGetSaldo200Response>(response);
        }

        /// <summary>
        /// Test TagorServiceGetVoxtronReferentie
        /// </summary>
        [Fact]
        public void TagorServiceGetVoxtronReferentieTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServiceGetVoxtronReferentieRequest? tagorServiceGetVoxtronReferentieRequest = null;
            //var response = instance.TagorServiceGetVoxtronReferentie(tagorServiceGetVoxtronReferentieRequest);
            //Assert.IsType<TagorServiceGetVoxtronReferentie200Response>(response);
        }

        /// <summary>
        /// Test TagorServiceGetVoxtronVerwByHuisNr
        /// </summary>
        [Fact]
        public void TagorServiceGetVoxtronVerwByHuisNrTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServiceGetVoxtronVerwByHuisNrRequest? tagorServiceGetVoxtronVerwByHuisNrRequest = null;
            //var response = instance.TagorServiceGetVoxtronVerwByHuisNr(tagorServiceGetVoxtronVerwByHuisNrRequest);
            //Assert.IsType<TagorServiceGetVoxtronVerwByHuisNr200Response>(response);
        }

        /// <summary>
        /// Test TagorServiceGetVoxtronVerwByPin
        /// </summary>
        [Fact]
        public void TagorServiceGetVoxtronVerwByPinTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServiceGetVoxtronVerwByPinRequest? tagorServiceGetVoxtronVerwByPinRequest = null;
            //var response = instance.TagorServiceGetVoxtronVerwByPin(tagorServiceGetVoxtronVerwByPinRequest);
            //Assert.IsType<ActionsSendMail200Response>(response);
        }

        /// <summary>
        /// Test TagorServiceHashToFile
        /// </summary>
        [Fact]
        public void TagorServiceHashToFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServiceHashToFileRequest? tagorServiceHashToFileRequest = null;
            //var response = instance.TagorServiceHashToFile(tagorServiceHashToFileRequest);
            //Assert.IsType<TagorServiceHashToFile200Response>(response);
        }

        /// <summary>
        /// Test TagorServiceKantoorOpen
        /// </summary>
        [Fact]
        public void TagorServiceKantoorOpenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServiceKantoorOpenRequest? tagorServiceKantoorOpenRequest = null;
            //var response = instance.TagorServiceKantoorOpen(tagorServiceKantoorOpenRequest);
            //Assert.IsType<TagorServiceKantoorOpen200Response>(response);
        }

        /// <summary>
        /// Test TagorServiceOnlinePaymentReceived
        /// </summary>
        [Fact]
        public void TagorServiceOnlinePaymentReceivedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServiceOnlinePaymentReceivedRequest? tagorServiceOnlinePaymentReceivedRequest = null;
            //var response = instance.TagorServiceOnlinePaymentReceived(tagorServiceOnlinePaymentReceivedRequest);
            //Assert.IsType<ActionsSendMail200Response>(response);
        }

        /// <summary>
        /// Test TagorServicePaymentDetails
        /// </summary>
        [Fact]
        public void TagorServicePaymentDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.TagorServicePaymentDetails();
            //Assert.IsType<TagorServicePaymentDetails200Response>(response);
        }

        /// <summary>
        /// Test TagorServicePaymentInfo
        /// </summary>
        [Fact]
        public void TagorServicePaymentInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServicePaymentInfoRequest? tagorServicePaymentInfoRequest = null;
            //var response = instance.TagorServicePaymentInfo(tagorServicePaymentInfoRequest);
            //Assert.IsType<TagorServicePaymentInfo200Response>(response);
        }

        /// <summary>
        /// Test TagorServicePinToFile
        /// </summary>
        [Fact]
        public void TagorServicePinToFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServicePinToFileRequest? tagorServicePinToFileRequest = null;
            //var response = instance.TagorServicePinToFile(tagorServicePinToFileRequest);
            //Assert.IsType<TagorServicePinToFile200Response>(response);
        }

        /// <summary>
        /// Test TagorServiceSavePaymentPlan
        /// </summary>
        [Fact]
        public void TagorServiceSavePaymentPlanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServiceSavePaymentPlanRequest? tagorServiceSavePaymentPlanRequest = null;
            //var response = instance.TagorServiceSavePaymentPlan(tagorServiceSavePaymentPlanRequest);
            //Assert.IsType<TagorServiceSavePaymentPlan200Response>(response);
        }

        /// <summary>
        /// Test TagorServiceScanBarcode
        /// </summary>
        [Fact]
        public void TagorServiceScanBarcodeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServiceScanBarcodeRequest? tagorServiceScanBarcodeRequest = null;
            //var response = instance.TagorServiceScanBarcode(tagorServiceScanBarcodeRequest);
            //Assert.IsType<TagorServiceScanBarcode200Response>(response);
        }

        /// <summary>
        /// Test TagorServiceSelfServiceAllowed
        /// </summary>
        [Fact]
        public void TagorServiceSelfServiceAllowedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServiceSelfServiceAllowedRequest? tagorServiceSelfServiceAllowedRequest = null;
            //var response = instance.TagorServiceSelfServiceAllowed(tagorServiceSelfServiceAllowedRequest);
            //Assert.IsType<ActionsSendMail200Response>(response);
        }

        /// <summary>
        /// Test TagorServiceSendMail
        /// </summary>
        [Fact]
        public void TagorServiceSendMailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServiceSendMailRequest? tagorServiceSendMailRequest = null;
            //var response = instance.TagorServiceSendMail(tagorServiceSendMailRequest);
            //Assert.IsType<ActionsSendMail200Response>(response);
        }

        /// <summary>
        /// Test TagorServiceSendSms
        /// </summary>
        [Fact]
        public void TagorServiceSendSmsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServiceSendSmsRequest? tagorServiceSendSmsRequest = null;
            //var response = instance.TagorServiceSendSms(tagorServiceSendSmsRequest);
            //Assert.IsType<ActionsSendMail200Response>(response);
        }

        /// <summary>
        /// Test TagorServiceSetUserDossier
        /// </summary>
        [Fact]
        public void TagorServiceSetUserDossierTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagorServiceSetUserDossierRequest? tagorServiceSetUserDossierRequest = null;
            //var response = instance.TagorServiceSetUserDossier(tagorServiceSetUserDossierRequest);
            //Assert.IsType<ActionsSendMail200Response>(response);
        }
    }
}
