/*
 * Tagor API
 *
 * Release date: 29/09/2022  ## REQUIREMENTS This version __requires__ Tagor >= 2.00.0000B0. Use [`Config/Info`](#operation/ConfigInfo) to get the active API version.  ## CHANGELOG - New [`Dossier/CreateAgenda`](#operation/DossierCreateAgenda) endpoint. - New return values in GetAgenda 'TJOB_Id, TJOBM_Id, TUSER_Id, Manueel and IsGeblokkeerd' - In CreateLine you can now add if the line is fixed with 'IsFixed' - In CreateLine you can now add a subarray with the intrests  ## INFO - Using the download button at the top you can import this collection of endpoints in **Postman** - In general all TQ(...)_Id fields are default fields which you can translate with the [`Code/GetDescription`](#operation/CodeGetDescription) endpoint. If you need an id to post to one of the endpoints you can use the [`Code/GetList`](#operation/CodeGetList) endpoint to get all possible values or [`Code/GetDescription`](#operation/CodeGetDescription) to get a value by code. These id's will be marked as `code id` in the documentation. - We chose to return all ids as string because these are 64bit integers which are too big for javascript to handle. - All italic text below the endpoint description is meant for people with access to Tagor. - The user needs an email address configured in Tagor for the services to work properly. - Pass the `Accept` header with `application/json` as value to have the server return errors in json format. - Most endpoints can be batched/paged by passing a `BATCH-SIZE` and `BATCH-NUMBER` record in `dsWebContext`.  # AUTHENTICATION Pass your token via an `Authorization` header like this: `Authorization: {bearer_format} {token}`.  ex: `Authorization: TGR IcoQbVw7wE...PPUPda61ET` <!- - ReDoc-Inject: <security-definitions> - ->
 *
 * The version of the OpenAPI document: 2.00.0000B1
 * Contact: info@organi.be
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = TagorClient.Client.OpenAPIDateConverter;

namespace TagorClient.Model
{
    /// <summary>
    /// DsTBERICHTWebDsTBERICHTWebTtTBERICHTWebInner
    /// </summary>
    [DataContract(Name = "dsTBERICHTWeb_dsTBERICHTWeb_ttTBERICHTWeb_inner")]
    public partial class DsTBERICHTWebDsTBERICHTWebTtTBERICHTWebInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DsTBERICHTWebDsTBERICHTWebTtTBERICHTWebInner" /> class.
        /// </summary>
        /// <param name="tBERICHTId">tBERICHTId.</param>
        /// <param name="ontvanger">ontvanger.</param>
        /// <param name="tJOBId">tJOBId.</param>
        /// <param name="tJOBOnderwerp">tJOBOnderwerp.</param>
        /// <param name="tJOBTQSTATUSId">Indicates read/unread status..</param>
        /// <param name="tQSTATUSId">tQSTATUSId.</param>
        /// <param name="timeStampBericht">timeStampBericht.</param>
        /// <param name="timeStampStatusSinds">timeStampStatusSinds.</param>
        /// <param name="tQRICHTINGId">tQRICHTINGId.</param>
        /// <param name="verzender">verzender.</param>
        /// <param name="tJOBBericht">tJOBBericht.</param>
        /// <param name="tPARIdVerzender">tPARIdVerzender.</param>
        /// <param name="tPARIdOntvanger">tPARIdOntvanger.</param>
        /// <param name="tDOSId">tDOSId.</param>
        /// <param name="tQDOSSOORTId">tQDOSSOORTId.</param>
        /// <param name="ttTagWeb">ttTagWeb.</param>
        public DsTBERICHTWebDsTBERICHTWebTtTBERICHTWebInner(string tBERICHTId = default(string), string ontvanger = default(string), string tJOBId = default(string), string tJOBOnderwerp = default(string), string tJOBTQSTATUSId = default(string), string tQSTATUSId = default(string), string timeStampBericht = default(string), string timeStampStatusSinds = default(string), string tQRICHTINGId = default(string), string verzender = default(string), string tJOBBericht = default(string), string tPARIdVerzender = default(string), string tPARIdOntvanger = default(string), string tDOSId = default(string), string tQDOSSOORTId = default(string), List<TtTagWeb> ttTagWeb = default(List<TtTagWeb>))
        {
            this.TBERICHTId = tBERICHTId;
            this.Ontvanger = ontvanger;
            this.TJOBId = tJOBId;
            this.TJOBOnderwerp = tJOBOnderwerp;
            this.TJOBTQSTATUSId = tJOBTQSTATUSId;
            this.TQSTATUSId = tQSTATUSId;
            this.TimeStampBericht = timeStampBericht;
            this.TimeStampStatusSinds = timeStampStatusSinds;
            this.TQRICHTINGId = tQRICHTINGId;
            this.Verzender = verzender;
            this.TJOBBericht = tJOBBericht;
            this.TPARIdVerzender = tPARIdVerzender;
            this.TPARIdOntvanger = tPARIdOntvanger;
            this.TDOSId = tDOSId;
            this.TQDOSSOORTId = tQDOSSOORTId;
            this.TtTagWeb = ttTagWeb;
        }

        /// <summary>
        /// Gets or Sets TBERICHTId
        /// </summary>
        [DataMember(Name = "TBERICHT_Id", EmitDefaultValue = false)]
        public string TBERICHTId { get; set; }

        /// <summary>
        /// Gets or Sets Ontvanger
        /// </summary>
        [DataMember(Name = "Ontvanger", EmitDefaultValue = false)]
        public string Ontvanger { get; set; }

        /// <summary>
        /// Gets or Sets TJOBId
        /// </summary>
        [DataMember(Name = "TJOB_Id", EmitDefaultValue = false)]
        public string TJOBId { get; set; }

        /// <summary>
        /// Gets or Sets TJOBOnderwerp
        /// </summary>
        [DataMember(Name = "TJOB_Onderwerp", EmitDefaultValue = false)]
        public string TJOBOnderwerp { get; set; }

        /// <summary>
        /// Indicates read/unread status.
        /// </summary>
        /// <value>Indicates read/unread status.</value>
        [DataMember(Name = "TJOB_TQSTATUS_Id", EmitDefaultValue = false)]
        public string TJOBTQSTATUSId { get; set; }

        /// <summary>
        /// Gets or Sets TQSTATUSId
        /// </summary>
        [DataMember(Name = "TQSTATUS_Id", EmitDefaultValue = false)]
        public string TQSTATUSId { get; set; }

        /// <summary>
        /// Gets or Sets TimeStampBericht
        /// </summary>
        [DataMember(Name = "TimeStampBericht", EmitDefaultValue = true)]
        public string TimeStampBericht { get; set; }

        /// <summary>
        /// Gets or Sets TimeStampStatusSinds
        /// </summary>
        [DataMember(Name = "TimeStampStatusSinds", EmitDefaultValue = true)]
        public string TimeStampStatusSinds { get; set; }

        /// <summary>
        /// Gets or Sets TQRICHTINGId
        /// </summary>
        [DataMember(Name = "TQRICHTING_Id", EmitDefaultValue = false)]
        public string TQRICHTINGId { get; set; }

        /// <summary>
        /// Gets or Sets Verzender
        /// </summary>
        [DataMember(Name = "Verzender", EmitDefaultValue = false)]
        public string Verzender { get; set; }

        /// <summary>
        /// Gets or Sets TJOBBericht
        /// </summary>
        [DataMember(Name = "TJOB_bericht", EmitDefaultValue = false)]
        public string TJOBBericht { get; set; }

        /// <summary>
        /// Gets or Sets TPARIdVerzender
        /// </summary>
        [DataMember(Name = "TPAR_id_Verzender", EmitDefaultValue = false)]
        public string TPARIdVerzender { get; set; }

        /// <summary>
        /// Gets or Sets TPARIdOntvanger
        /// </summary>
        [DataMember(Name = "TPAR_id_Ontvanger", EmitDefaultValue = false)]
        public string TPARIdOntvanger { get; set; }

        /// <summary>
        /// Gets or Sets TDOSId
        /// </summary>
        [DataMember(Name = "TDOS_Id", EmitDefaultValue = false)]
        public string TDOSId { get; set; }

        /// <summary>
        /// Gets or Sets TQDOSSOORTId
        /// </summary>
        [DataMember(Name = "TQDOSSOORT_Id", EmitDefaultValue = false)]
        public string TQDOSSOORTId { get; set; }

        /// <summary>
        /// Gets or Sets TtTagWeb
        /// </summary>
        [DataMember(Name = "ttTagWeb", EmitDefaultValue = false)]
        public List<TtTagWeb> TtTagWeb { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DsTBERICHTWebDsTBERICHTWebTtTBERICHTWebInner {\n");
            sb.Append("  TBERICHTId: ").Append(TBERICHTId).Append("\n");
            sb.Append("  Ontvanger: ").Append(Ontvanger).Append("\n");
            sb.Append("  TJOBId: ").Append(TJOBId).Append("\n");
            sb.Append("  TJOBOnderwerp: ").Append(TJOBOnderwerp).Append("\n");
            sb.Append("  TJOBTQSTATUSId: ").Append(TJOBTQSTATUSId).Append("\n");
            sb.Append("  TQSTATUSId: ").Append(TQSTATUSId).Append("\n");
            sb.Append("  TimeStampBericht: ").Append(TimeStampBericht).Append("\n");
            sb.Append("  TimeStampStatusSinds: ").Append(TimeStampStatusSinds).Append("\n");
            sb.Append("  TQRICHTINGId: ").Append(TQRICHTINGId).Append("\n");
            sb.Append("  Verzender: ").Append(Verzender).Append("\n");
            sb.Append("  TJOBBericht: ").Append(TJOBBericht).Append("\n");
            sb.Append("  TPARIdVerzender: ").Append(TPARIdVerzender).Append("\n");
            sb.Append("  TPARIdOntvanger: ").Append(TPARIdOntvanger).Append("\n");
            sb.Append("  TDOSId: ").Append(TDOSId).Append("\n");
            sb.Append("  TQDOSSOORTId: ").Append(TQDOSSOORTId).Append("\n");
            sb.Append("  TtTagWeb: ").Append(TtTagWeb).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
