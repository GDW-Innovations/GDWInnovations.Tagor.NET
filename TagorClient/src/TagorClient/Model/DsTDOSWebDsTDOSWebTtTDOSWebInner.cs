/*
 * Tagor API
 *
 * Release date: 29/09/2022  ## REQUIREMENTS This version __requires__ Tagor >= 2.00.0000B0. Use [`Config/Info`](#operation/ConfigInfo) to get the active API version.  ## CHANGELOG - New [`Dossier/CreateAgenda`](#operation/DossierCreateAgenda) endpoint. - New return values in GetAgenda 'TJOB_Id, TJOBM_Id, TUSER_Id, Manueel and IsGeblokkeerd' - In CreateLine you can now add if the line is fixed with 'IsFixed' - In CreateLine you can now add a subarray with the intrests  ## INFO - Using the download button at the top you can import this collection of endpoints in **Postman** - In general all TQ(...)_Id fields are default fields which you can translate with the [`Code/GetDescription`](#operation/CodeGetDescription) endpoint. If you need an id to post to one of the endpoints you can use the [`Code/GetList`](#operation/CodeGetList) endpoint to get all possible values or [`Code/GetDescription`](#operation/CodeGetDescription) to get a value by code. These id's will be marked as `code id` in the documentation. - We chose to return all ids as string because these are 64bit integers which are too big for javascript to handle. - All italic text below the endpoint description is meant for people with access to Tagor. - The user needs an email address configured in Tagor for the services to work properly. - Pass the `Accept` header with `application/json` as value to have the server return errors in json format. - Most endpoints can be batched/paged by passing a `BATCH-SIZE` and `BATCH-NUMBER` record in `dsWebContext`.  # AUTHENTICATION Pass your token via an `Authorization` header like this: `Authorization: {bearer_format} {token}`.  ex: `Authorization: TGR IcoQbVw7wE...PPUPda61ET` <!- - ReDoc-Inject: <security-definitions> - ->
 *
 * The version of the OpenAPI document: 2.00.0000B1
 * Contact: info@organi.be
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = TagorClient.Client.OpenAPIDateConverter;

namespace TagorClient.Model
{
    /// <summary>
    /// DsTDOSWebDsTDOSWebTtTDOSWebInner
    /// </summary>
    [DataContract(Name = "dsTDOSWeb_dsTDOSWeb_ttTDOSWeb_inner")]
    public partial class DsTDOSWebDsTDOSWebTtTDOSWebInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DsTDOSWebDsTDOSWebTtTDOSWebInner" /> class.
        /// </summary>
        /// <param name="aanlegger">aanlegger.</param>
        /// <param name="archiefnr">archiefnr.</param>
        /// <param name="datumStop">datumStop.</param>
        /// <param name="dossiernaam">dossiernaam.</param>
        /// <param name="klant">klant.</param>
        /// <param name="klantRef1">klantRef1.</param>
        /// <param name="klantRef2">klantRef2.</param>
        /// <param name="sOLVDatumAdres">sOLVDatumAdres.</param>
        /// <param name="sOLVDatumFinan">sOLVDatumFinan.</param>
        /// <param name="statusDatum">statusDatum.</param>
        /// <param name="statusDatumAlarm">statusDatumAlarm.</param>
        /// <param name="statusDatumKlant">statusDatumKlant.</param>
        /// <param name="statusDatumStadium">statusDatumStadium.</param>
        /// <param name="tDOSId">tDOSId.</param>
        /// <param name="tQSOLVIdAdres">tQSOLVIdAdres.</param>
        /// <param name="tQSOLVIdFinan">tQSOLVIdFinan.</param>
        /// <param name="tQSTATUSId">tQSTATUSId.</param>
        /// <param name="tQSTATUSIdAlarm">tQSTATUSIdAlarm.</param>
        /// <param name="tQSTATUSIdKlant">tQSTATUSIdKlant.</param>
        /// <param name="tQSTATUSIdStadium">tQSTATUSIdStadium.</param>
        /// <param name="tQSTATUSIdStop">tQSTATUSIdStop.</param>
        /// <param name="verkoopDatum">verkoopDatum.</param>
        /// <param name="verweerder">verweerder.</param>
        /// <param name="datumCreatie">datumCreatie.</param>
        /// <param name="datumWijziging">datumWijziging.</param>
        /// <param name="subdossier">subdossier.</param>
        /// <param name="tQDOSSOORTId">tQDOSSOORTId.</param>
        /// <param name="saldoKlant">saldoKlant.</param>
        /// <param name="saldoAanl">saldoAanl.</param>
        /// <param name="saldoVerw">saldoVerw.</param>
        public DsTDOSWebDsTDOSWebTtTDOSWebInner(string aanlegger = default(string), string archiefnr = default(string), DateOnly datumStop = default(DateOnly), string dossiernaam = default(string), string klant = default(string), string klantRef1 = default(string), string klantRef2 = default(string), DateOnly sOLVDatumAdres = default(DateOnly), DateOnly sOLVDatumFinan = default(DateOnly), DateOnly statusDatum = default(DateOnly), DateOnly statusDatumAlarm = default(DateOnly), DateOnly statusDatumKlant = default(DateOnly), DateOnly statusDatumStadium = default(DateOnly), string tDOSId = default(string), string tQSOLVIdAdres = default(string), string tQSOLVIdFinan = default(string), string tQSTATUSId = default(string), string tQSTATUSIdAlarm = default(string), string tQSTATUSIdKlant = default(string), string tQSTATUSIdStadium = default(string), string tQSTATUSIdStop = default(string), DateOnly verkoopDatum = default(DateOnly), string verweerder = default(string), DateOnly datumCreatie = default(DateOnly), DateOnly datumWijziging = default(DateOnly), bool subdossier = default(bool), string tQDOSSOORTId = default(string), decimal saldoKlant = default(decimal), decimal saldoAanl = default(decimal), decimal saldoVerw = default(decimal))
        {
            this.Aanlegger = aanlegger;
            this.Archiefnr = archiefnr;
            this.DatumStop = datumStop;
            this.Dossiernaam = dossiernaam;
            this.Klant = klant;
            this.KlantRef1 = klantRef1;
            this.KlantRef2 = klantRef2;
            this.SOLVDatumAdres = sOLVDatumAdres;
            this.SOLVDatumFinan = sOLVDatumFinan;
            this.StatusDatum = statusDatum;
            this.StatusDatumAlarm = statusDatumAlarm;
            this.StatusDatumKlant = statusDatumKlant;
            this.StatusDatumStadium = statusDatumStadium;
            this.TDOSId = tDOSId;
            this.TQSOLVIdAdres = tQSOLVIdAdres;
            this.TQSOLVIdFinan = tQSOLVIdFinan;
            this.TQSTATUSId = tQSTATUSId;
            this.TQSTATUSIdAlarm = tQSTATUSIdAlarm;
            this.TQSTATUSIdKlant = tQSTATUSIdKlant;
            this.TQSTATUSIdStadium = tQSTATUSIdStadium;
            this.TQSTATUSIdStop = tQSTATUSIdStop;
            this.VerkoopDatum = verkoopDatum;
            this.Verweerder = verweerder;
            this.DatumCreatie = datumCreatie;
            this.DatumWijziging = datumWijziging;
            this.Subdossier = subdossier;
            this.TQDOSSOORTId = tQDOSSOORTId;
            this.SaldoKlant = saldoKlant;
            this.SaldoAanl = saldoAanl;
            this.SaldoVerw = saldoVerw;
        }

        /// <summary>
        /// Gets or Sets Aanlegger
        /// </summary>
        [DataMember(Name = "Aanlegger", EmitDefaultValue = false)]
        public string Aanlegger { get; set; }

        /// <summary>
        /// Gets or Sets Archiefnr
        /// </summary>
        [DataMember(Name = "Archiefnr", EmitDefaultValue = false)]
        public string Archiefnr { get; set; }

        /// <summary>
        /// Gets or Sets DatumStop
        /// </summary>
        [DataMember(Name = "DatumStop", EmitDefaultValue = false)]
        public DateOnly DatumStop { get; set; }

        /// <summary>
        /// Gets or Sets Dossiernaam
        /// </summary>
        [DataMember(Name = "Dossiernaam", EmitDefaultValue = false)]
        public string Dossiernaam { get; set; }

        /// <summary>
        /// Gets or Sets Klant
        /// </summary>
        [DataMember(Name = "Klant", EmitDefaultValue = false)]
        public string Klant { get; set; }

        /// <summary>
        /// Gets or Sets KlantRef1
        /// </summary>
        [DataMember(Name = "KlantRef1", EmitDefaultValue = false)]
        public string KlantRef1 { get; set; }

        /// <summary>
        /// Gets or Sets KlantRef2
        /// </summary>
        [DataMember(Name = "KlantRef2", EmitDefaultValue = false)]
        public string KlantRef2 { get; set; }

        /// <summary>
        /// Gets or Sets SOLVDatumAdres
        /// </summary>
        [DataMember(Name = "SOLVDatum_adres", EmitDefaultValue = false)]
        public DateOnly SOLVDatumAdres { get; set; }

        /// <summary>
        /// Gets or Sets SOLVDatumFinan
        /// </summary>
        [DataMember(Name = "SOLVDatum_finan", EmitDefaultValue = false)]
        public DateOnly SOLVDatumFinan { get; set; }

        /// <summary>
        /// Gets or Sets StatusDatum
        /// </summary>
        [DataMember(Name = "StatusDatum", EmitDefaultValue = false)]
        public DateOnly StatusDatum { get; set; }

        /// <summary>
        /// Gets or Sets StatusDatumAlarm
        /// </summary>
        [DataMember(Name = "StatusDatum_Alarm", EmitDefaultValue = false)]
        public DateOnly StatusDatumAlarm { get; set; }

        /// <summary>
        /// Gets or Sets StatusDatumKlant
        /// </summary>
        [DataMember(Name = "StatusDatum_Klant", EmitDefaultValue = false)]
        public DateOnly StatusDatumKlant { get; set; }

        /// <summary>
        /// Gets or Sets StatusDatumStadium
        /// </summary>
        [DataMember(Name = "StatusDatum_Stadium", EmitDefaultValue = false)]
        public DateOnly StatusDatumStadium { get; set; }

        /// <summary>
        /// Gets or Sets TDOSId
        /// </summary>
        [DataMember(Name = "TDOS_Id", EmitDefaultValue = false)]
        public string TDOSId { get; set; }

        /// <summary>
        /// Gets or Sets TQSOLVIdAdres
        /// </summary>
        [DataMember(Name = "TQSOLV_Id_Adres", EmitDefaultValue = false)]
        public string TQSOLVIdAdres { get; set; }

        /// <summary>
        /// Gets or Sets TQSOLVIdFinan
        /// </summary>
        [DataMember(Name = "TQSOLV_Id_Finan", EmitDefaultValue = false)]
        public string TQSOLVIdFinan { get; set; }

        /// <summary>
        /// Gets or Sets TQSTATUSId
        /// </summary>
        [DataMember(Name = "TQSTATUS_Id", EmitDefaultValue = false)]
        public string TQSTATUSId { get; set; }

        /// <summary>
        /// Gets or Sets TQSTATUSIdAlarm
        /// </summary>
        [DataMember(Name = "TQSTATUS_Id_Alarm", EmitDefaultValue = false)]
        public string TQSTATUSIdAlarm { get; set; }

        /// <summary>
        /// Gets or Sets TQSTATUSIdKlant
        /// </summary>
        [DataMember(Name = "TQSTATUS_Id_Klant", EmitDefaultValue = false)]
        public string TQSTATUSIdKlant { get; set; }

        /// <summary>
        /// Gets or Sets TQSTATUSIdStadium
        /// </summary>
        [DataMember(Name = "TQSTATUS_Id_Stadium", EmitDefaultValue = false)]
        public string TQSTATUSIdStadium { get; set; }

        /// <summary>
        /// Gets or Sets TQSTATUSIdStop
        /// </summary>
        [DataMember(Name = "TQSTATUS_Id_Stop", EmitDefaultValue = false)]
        public string TQSTATUSIdStop { get; set; }

        /// <summary>
        /// Gets or Sets VerkoopDatum
        /// </summary>
        [DataMember(Name = "VerkoopDatum", EmitDefaultValue = false)]
        public DateOnly VerkoopDatum { get; set; }

        /// <summary>
        /// Gets or Sets Verweerder
        /// </summary>
        [DataMember(Name = "Verweerder", EmitDefaultValue = false)]
        public string Verweerder { get; set; }

        /// <summary>
        /// Gets or Sets DatumCreatie
        /// </summary>
        [DataMember(Name = "DatumCreatie", EmitDefaultValue = false)]
        public DateOnly DatumCreatie { get; set; }

        /// <summary>
        /// Gets or Sets DatumWijziging
        /// </summary>
        [DataMember(Name = "DatumWijziging", EmitDefaultValue = false)]
        public DateOnly DatumWijziging { get; set; }

        /// <summary>
        /// Gets or Sets Subdossier
        /// </summary>
        [DataMember(Name = "Subdossier", EmitDefaultValue = true)]
        public bool Subdossier { get; set; }

        /// <summary>
        /// Gets or Sets TQDOSSOORTId
        /// </summary>
        [DataMember(Name = "TQDOSSOORT_Id", EmitDefaultValue = false)]
        public string TQDOSSOORTId { get; set; }

        /// <summary>
        /// Gets or Sets SaldoKlant
        /// </summary>
        [DataMember(Name = "SaldoKlant", EmitDefaultValue = false)]
        public decimal SaldoKlant { get; set; }

        /// <summary>
        /// Gets or Sets SaldoAanl
        /// </summary>
        [DataMember(Name = "SaldoAanl", EmitDefaultValue = false)]
        public decimal SaldoAanl { get; set; }

        /// <summary>
        /// Gets or Sets SaldoVerw
        /// </summary>
        [DataMember(Name = "SaldoVerw", EmitDefaultValue = false)]
        public decimal SaldoVerw { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DsTDOSWebDsTDOSWebTtTDOSWebInner {\n");
            sb.Append("  Aanlegger: ").Append(Aanlegger).Append("\n");
            sb.Append("  Archiefnr: ").Append(Archiefnr).Append("\n");
            sb.Append("  DatumStop: ").Append(DatumStop).Append("\n");
            sb.Append("  Dossiernaam: ").Append(Dossiernaam).Append("\n");
            sb.Append("  Klant: ").Append(Klant).Append("\n");
            sb.Append("  KlantRef1: ").Append(KlantRef1).Append("\n");
            sb.Append("  KlantRef2: ").Append(KlantRef2).Append("\n");
            sb.Append("  SOLVDatumAdres: ").Append(SOLVDatumAdres).Append("\n");
            sb.Append("  SOLVDatumFinan: ").Append(SOLVDatumFinan).Append("\n");
            sb.Append("  StatusDatum: ").Append(StatusDatum).Append("\n");
            sb.Append("  StatusDatumAlarm: ").Append(StatusDatumAlarm).Append("\n");
            sb.Append("  StatusDatumKlant: ").Append(StatusDatumKlant).Append("\n");
            sb.Append("  StatusDatumStadium: ").Append(StatusDatumStadium).Append("\n");
            sb.Append("  TDOSId: ").Append(TDOSId).Append("\n");
            sb.Append("  TQSOLVIdAdres: ").Append(TQSOLVIdAdres).Append("\n");
            sb.Append("  TQSOLVIdFinan: ").Append(TQSOLVIdFinan).Append("\n");
            sb.Append("  TQSTATUSId: ").Append(TQSTATUSId).Append("\n");
            sb.Append("  TQSTATUSIdAlarm: ").Append(TQSTATUSIdAlarm).Append("\n");
            sb.Append("  TQSTATUSIdKlant: ").Append(TQSTATUSIdKlant).Append("\n");
            sb.Append("  TQSTATUSIdStadium: ").Append(TQSTATUSIdStadium).Append("\n");
            sb.Append("  TQSTATUSIdStop: ").Append(TQSTATUSIdStop).Append("\n");
            sb.Append("  VerkoopDatum: ").Append(VerkoopDatum).Append("\n");
            sb.Append("  Verweerder: ").Append(Verweerder).Append("\n");
            sb.Append("  DatumCreatie: ").Append(DatumCreatie).Append("\n");
            sb.Append("  DatumWijziging: ").Append(DatumWijziging).Append("\n");
            sb.Append("  Subdossier: ").Append(Subdossier).Append("\n");
            sb.Append("  TQDOSSOORTId: ").Append(TQDOSSOORTId).Append("\n");
            sb.Append("  SaldoKlant: ").Append(SaldoKlant).Append("\n");
            sb.Append("  SaldoAanl: ").Append(SaldoAanl).Append("\n");
            sb.Append("  SaldoVerw: ").Append(SaldoVerw).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
